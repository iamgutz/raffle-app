{"version":3,"sources":["utils/localstorage.js","config/index.js","components/button/index.js","components/app-logo/styles.js","components/app-logo/index.js","components/typography/index.js","views/intro/index.js","components/text-area/index.js","style/media-queries.js","components/layout/index.js","views/set-participants/index.js","components/list/index.js","views/confirm-participants/index.js","components/svg/index.js","views/shuffle/component.js","views/shuffle/index.js","views/winner/styles.js","views/winner/index.js","views/index.js","components/app-wrapper/index.js","App/app.js","App/helpers.js","App/index.js","serviceWorker.js","index.js","components/svg/shuffle-spinner.svg"],"names":["available","Storage","clearStorage","window","localStorage","clear","getFromStorage","key","JSON","parse","getItem","setInStorage","value","setItem","stringify","config","appLogoImgSrc","bgColor","buttonColor","listItemBgColorEven","textColor","addParticipantsTitle","backButton","cancelButton","confirmButton","confirmTitle","congratulationsSuperTitle","congratulationsTitle","continueButton","enterButton","finishButton","pickingWinnerTitle","slogan","startOverButton","Button","styled","button","_templateObject","Config","propTypes","primary","PropTypes","bool","secondary","AppLogoImg","img","styles_templateObject","_ref","xlarge","_ref2","large","_ref3","medium","_ref4","small","_ref5","xsmall","AppLogo","props","react_default","a","createElement","Object","assign","src","Title","h1","typography_templateObject","SuperTitle","_templateObject2","Headline","h2","_templateObject3","SubTitle","h4","_templateObject4","P","p","_templateObject5","textAlign","concat","Component","onChangeView","react","app_logo","components_button","onClick","TextArea","textarea","text_area_templateObject","SIZE","DEVICE","MOBILE_S","MOBILE_M","MOBILE_L","TABLET","LAPTOP","LAPTOP_L","DESKTOP","Main","main","layout_templateObject","Row","div","layout_templateObject2","Container","layout_templateObject3","previousView","nextView","onTextareaChange","participants","text_area","onInput","target","defaultValue","join","disabled","_isEmpty","defaultProps","List","ul","list_templateObject","Item","li","list_templateObject2","Fragment","map","ImgSVG","svg_templateObject","width","padding","selected","svg","suffleSpinner","Shuffle","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setSelected","index","state","shuffledParticipants","setState","debouncedOnSelectWinner","clearState","_shuffle","randomTimeout","shuffleInterval","showWinnerTimeout","_debounce","onSelectedWinner","_this$props","getRandomTimeout","forcedWinner","timeout","setTimeout","clearInterval","finalWinner","indexOf","setInterval","randomParticipant","Math","floor","random","length","clearTimeout","_this$state","component","PureComponent","Podium","winner_styles_templateObject","Winner","handleFinish","onClearState","handleStartOver","_this2","selectedWinner","react_confetti_min_default","innerWidth","height","innerHeight","VIEWS","intro","Intro","setParticipants","SetParticipants","confirmParticipants","ConfirmParticipants","shuffle","winner","AppWrapper","app_wrapper_templateObject","App","activeView","rest","objectWithoutProperties","ActiveContainer","app_wrapper","parseTextAreaValue","_map","_compact","split","_trim","changeActiveView","viewName","textareaChange","callback","initialState","app","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.e412b188.chunk.js","sourcesContent":["const available = () => typeof(Storage) !== \"undefined\";\nexport const clearStorage = () => available && window.localStorage.clear();\nexport const getFromStorage = key => available && JSON.parse(window.localStorage.getItem(key));\nexport const getStorage = () => available && window.localStorage;\nexport const removeFromStorage = key => available && window.localStorage.removeItem(key);\nexport const setInStorage = (key, value) => available && window.localStorage.setItem(key, JSON.stringify(value));\n","export default {\n  forcedWinner: 'John Doe',\n  theme: {\n    appLogoImgSrc: '/images/raffle-logo.jpg',\n    bgColor: '#F7F7F7',\n    buttonColor: '#FF070C',\n    listItemBgColorEven: '#E7EDED',\n    textColor: '#000834',\n  },\n  text: {\n    addParticipantsTitle: 'Add Participants',\n    backButton: 'Go Back',\n    cancelButton: 'Cancel',\n    confirmButton: 'Confirm & Go!',\n    confirmTitle: 'Confirm the participants',\n    congratulationsSuperTitle: 'Congratulations!',\n    congratulationsTitle: 'The winner is...',\n    continueButton: 'Continue',\n    enterButton: 'Enter now!',\n    finishButton: 'Finalize',\n    pickingWinnerTitle: 'Picking the winner',\n    slogan: 'Win prizes today, good luck.',\n    startOverButton: 'Start Over',\n  },\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Config from 'config';\n\nconst Button = styled.button `\n  border: none;\n  font-family: 'PT Sans', sans-serif;\n  font-size: 1rem;\n  font-weight: bold;\n  padding: 1rem;\n  text-transform: uppercase;\n  cursor: pointer;\n  background: transparent;\n  color: ${Config.theme.buttonColor};\n  border: 3px solid ${Config.theme.buttonColor};\n`;\n\nButton.propTypes = {\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const AppLogoImg = styled.img`\n  width: 20rem;\n  ${({ xlarge }) => xlarge && `\n    width: 40rem;\n  `}\n  ${({ large }) => large && `\n    width: 30rem;\n  `}\n  ${({ medium }) => medium && `\n    width: 20rem;\n  `}\n  ${({ small }) => small && `\n    width: 10rem;\n  `}\n  ${({ xsmall }) => xsmall && `\n    width: 5rem;\n  `}\n`;\n","import React from 'react';\nimport { AppLogoImg } from './styles';\nimport Config from 'config';\n\nconst AppLogo = props => (\n  <AppLogoImg src={Config.theme.appLogoImgSrc} {...props} />\n);\n\nexport default AppLogo;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-family: 'Teko', sans-serif;\n  font-size: 3.36rem;\n  font-weight: normal;\n  margin: 1rem 0;\n  display: block;\n  line-height: 3.36rem;\n`;\n\nexport const SuperTitle = styled(Title)`\n  font-size: 9rem;\n  font-weight: bold;\n  line-height: 9rem;\n`;\n\nexport const Headline = styled.h2`\n  font-family: 'Montserrat', sans-serif;\n`;\n\nexport const SubTitle = styled.h4`\n  font-family: 'Montserrat', sans-serif;\n  font-weight: normal;\n  font-size: 1.5rem;\n  margin: 1rem 0;\n`;\n\nexport const P = styled.p`\n  font-family: 'Catamaran', sans-serif;\n  font-size: 1.5rem;\n  ${({ textAlign }) => textAlign && `\n    text-align: ${textAlign};\n  `}\n`;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/button';\nimport AppLogo from 'components/app-logo';\nimport { SubTitle } from 'components/typography';\nimport Config from 'config';\n\nconst Component = props => {\n  const { onChangeView } = props;\n  return (\n    <Fragment>\n      <AppLogo/>\n      <SubTitle><strong>{Config.text.slogan}</strong></SubTitle>\n      <Button\n        onClick={() => onChangeView('setParticipants')}\n      >\n        {Config.text.enterButton}\n      </Button>\n    </Fragment>\n  );\n};\n\nComponent.propTypes = {\n  onChangeView: PropTypes.func.isRequired,\n}\n\nexport default Component;\n","import styled from 'styled-components';\n\nconst TextArea = styled.textarea`\n  border-radius: 0.5rem;\n  border: none;\n  box-sizing: border-box;\n  font-family: 'Catamaran', sans-serif;\n  font-size: 1.5rem;\n  height: 20rem;\n  outline: none;\n  padding: 1rem;\n  width: 100%;\n`;\n\nexport default TextArea;\n","export const SIZE = {\n  MOBILE_S: '320px',\n  MOBILE_M: '375px',\n  MOBILE_L: '425px',\n  TABLET: '768px',\n  LAPTOP: '1024px',\n  LAPTOP_L: '1140px',\n  DESKTOP: '2560px',\n};\n\nexport const DEVICE = {\n  MOBILE_S: `(min-width: ${SIZE.MOBILE_S})`,\n  MOBILE_M: `(min-width: ${SIZE.MOBILE_M})`,\n  MOBILE_L: `(min-width: ${SIZE.MOBILE_L})`,\n  TABLET: `(min-width: ${SIZE.TABLET})`,\n  LAPTOP: `(min-width: ${SIZE.LAPTOP})`,\n  LAPTOP_L: `(min-width: ${SIZE.LAPTOP_L})`,\n  DESKTOP: `(min-width: ${SIZE.DESKTOP})`,\n};\n","import styled from 'styled-components';\nimport { DEVICE } from 'style/media-queries';\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  padding: 0 1rem;\n  box-sizing: border-box;\n  @media ${DEVICE.TABLET} {\n    padding: 0 5rem;\n  }\n`;\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\nexport const Container = styled.main`\n  width: 100%;\n  max-width: 40rem;\n  padding: 0 1rem;\n  box-sizing: border-box;\n  @media ${DEVICE.TABLET} {\n    padding: 0 5rem;\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEmpty from 'lodash/isEmpty';\nimport TextArea from 'components/text-area';\nimport Button from 'components/button';\nimport { Row, Container } from 'components/layout';\nimport { Title } from 'components/typography';\nimport Config from 'config';\n\nconst Component = props => {\n  const {\n    onChangeView,\n    previousView,\n    nextView,\n    onTextareaChange,\n    participants,\n  } = props;\n\n  return (\n    <Container>\n      <Title>\n        {Config.text.addParticipantsTitle}\n      </Title>\n\n      <TextArea\n        onInput={({ target: { value } }) => onTextareaChange(value)}\n        defaultValue={participants && participants.join('\\n')}\n      />\n      <Row>\n        <Button\n          secondary\n          onClick={() => onChangeView(previousView)}\n        >\n          {Config.text.cancelButton}\n        </Button>\n        <Button\n          primary\n          onClick={() => onChangeView(nextView)}\n          disabled={_isEmpty(participants)}\n        >\n          {Config.text.continueButton}\n        </Button>\n      </Row>\n    </Container>\n  );\n};\n\nComponent.propTypes = {\n  previousView: PropTypes.string,\n  nextView: PropTypes.string,\n  participants: PropTypes.string.isRequired,\n  onTextareaChange: PropTypes.func.isRequired,\n};\n\nComponent.defaultProps = {\n  previousView: 'intro',\n  nextView: 'confirmParticipants',\n};\n\nexport default Component;\n","import styled from 'styled-components';\nimport Config from 'config';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: block;\n  width: 100%;\n  margin: 0;\n  padding: 1rem 0;\n  & > li {\n    border-bottom: 1px solid ${Config.theme.listItemBgColorEven};\n    &:last-child {\n      border-bottom: none;\n    }\n    &:nth-child(even) {\n      background: ${Config.theme.listItemBgColorEven};\n    }\n  }\n`;\n\nexport const Item = styled.li`\n  font-size: 1rem;\n  font-weight: bold;\n  display: block;\n  width: 100%;\n  text-align: left;\n  padding: 0.5rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/button';\nimport { List, Item } from 'components/list';\nimport { Row, Container } from 'components/layout';\nimport { Title } from 'components/typography';\nimport Config from 'config';\n\nconst Component = props => {\n  const { onChangeView, previousView, nextView, participants } = props;\n\n  return (\n    <Container>\n      {participants && (\n        <>\n          <Title>\n            {Config.text.confirmTitle}\n          </Title>\n        </>\n      )}\n      <List>\n        {participants && participants.map(p => (\n          <Item key={JSON.stringify(p)}>{p}</Item>\n        ))\n        }\n      </List>\n      <Row>\n        <Button\n          secondary\n          onClick={() => onChangeView(previousView)}\n        >\n          {Config.text.backButton}\n        </Button>\n        <Button\n          primary\n          onClick={() => onChangeView(nextView)}\n        >\n          {Config.text.confirmButton}\n        </Button>\n      </Row>\n    </Container>\n  );\n};\n\nComponent.propTypes = {\n  previousView: PropTypes.string,\n  nextView: PropTypes.string,\n};\n\nComponent.defaultProps = {\n  previousView: 'setParticipants',\n  nextView: 'shuffle',\n};\n\nexport default Component;\n","import styled from 'styled-components';\n\nconst ImgSVG = styled.img`\n  ${({ width }) => width && `\n    width: ${width};\n  `}\n  ${({ padding }) => padding && `\n    padding: ${padding};\n  `}\n`;\n\nexport default ImgSVG;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/button';\nimport { Row, Container } from 'components/layout';\nimport { Title, P } from 'components/typography';\nimport ImgSVG from 'components/svg';\nimport suffleSpinner from '../../components/svg/shuffle-spinner.svg';\nimport Config from 'config';\n\nconst Component = props => {\n  const { onChangeView, previousView, nextView, selected } = props;\n\n  return (\n    <Container>\n      <Title>\n        <ImgSVG width=\"3rem\" src={suffleSpinner} padding=\"0 1rem\" />\n        {Config.text.pickingWinnerTitle}\n        <ImgSVG width=\"3rem\" src={suffleSpinner} padding=\"0 1rem\" />\n      </Title>\n      <P textAlign=\"center\">{selected}</P>\n      <Row>\n        <Button\n          secondary\n          onClick={() => onChangeView(previousView)}\n        >\n          {Config.text.cancelButton}\n        </Button>\n        <Button\n          primary\n          onClick={() => onChangeView(nextView)}\n        >\n          {Config.text.finishButton}\n        </Button>\n      </Row>\n    </Container>\n  );\n};\n\nComponent.propTypes = {\n  previousView: PropTypes.string,\n  nextView: PropTypes.string,\n};\n\nComponent.defaultProps = {\n  previousView: 'confirmParticipants',\n  nextView: 'winner',\n};\n\nexport default Component;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport _shuffle from 'lodash/shuffle';\nimport _debounce from 'lodash/debounce';\nimport Component from './component';\n\nclass Shuffle extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shuffledParticipants: _shuffle(props.participants),\n      selected: null,\n    }\n    this.randomTimeout = null;\n    this.shuffleInterval = null;\n    this.showWinnerTimeout = null;\n    this.debouncedOnSelectWinner = _debounce(props.onSelectedWinner, 100);\n  }\n\n  setSelected = (index) => {\n    const { shuffledParticipants } = this.state;\n    const selected = shuffledParticipants[index];\n\n    this.setState({\n      selected,\n    }, () => {\n      this.debouncedOnSelectWinner(selected);\n    });\n  }\n\n  componentDidMount() {\n    const { getRandomTimeout, forcedWinner, onChangeView, nextView } = this.props;\n    const { shuffledParticipants } = this.state;\n    const _this = this;\n    const timeout = getRandomTimeout() * 1000;\n    this.randomTimeout = setTimeout(function() {\n      clearInterval(_this.shuffleInterval);\n      if (forcedWinner) {\n        const finalWinner = shuffledParticipants.indexOf(forcedWinner);\n        if (finalWinner >= 0) {\n          _this.setSelected(finalWinner);\n        }\n      }\n      _this.showWinnerTimeout = setTimeout(function() {\n        onChangeView(nextView);\n      }, 500);\n    }, timeout);\n    this.shuffleInterval = setInterval(function() {\n      const randomParticipant = Math.floor(Math.random() * shuffledParticipants.length);\n      _this.setSelected(randomParticipant);\n    }, 150);\n  }\n\n  componentWillUnmount() {\n    this.clearState();\n    clearTimeout(this.randomTimeout);\n    clearTimeout(this.showWinnerTimeout);\n    clearInterval(this.shuffleInterval);\n  }\n\n  clearState = () => {\n    this.setState({});\n  }\n\n  render() {\n    const { shuffledParticipants, selected } = this.state;\n    return (\n      <Component\n        {...this.props}\n        selected={selected}\n        participants={shuffledParticipants}\n      />\n    );\n  }\n}\n\nShuffle.propTypes = {\n  getRandomTimeout: PropTypes.func,\n  forcedWinner: PropTypes.string,\n  onChangeView: PropTypes.func.isRequired,\n  nextView: PropTypes.string,\n};\n\nShuffle.defaultProps = {\n  forcedWinner: null,\n  nextView: 'winner',\n  getRandomTimeout() {\n    return Math.floor(Math.random() * 10) + 5;\n  },\n};\n\nexport default Shuffle;\n","import styled from 'styled-components';\n\nexport const Podium = styled.div`\n  z-index: 3;\n  position: relative;\n  text-align: center;\n`;\n","import React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Confetti from 'react-confetti'\nimport Button from 'components/button';\nimport { SuperTitle, Headline, Title } from 'components/typography';\nimport AppLogo from 'components/app-logo';\nimport { clearStorage } from 'utils/localstorage';\nimport { Podium } from './styles';\nimport Config from 'config';\n\nclass Winner extends PureComponent {\n  handleFinish = () => {\n    const { onClearState } = this.props;\n    clearStorage();\n    onClearState(this.handleStartOver);\n  }\n  handleStartOver = () => {\n    const { onChangeView, nextView } = this.props;\n    onChangeView(nextView);\n  }\n  render(){\n    const { selectedWinner } = this.props;\n\n    return (\n      <Fragment>\n        <AppLogo small />\n        <Podium>\n          <Title>{Config.text.congratulationsTitle}</Title>\n          <Headline>{selectedWinner}</Headline>\n          <SuperTitle>{Config.text.congratulationsSuperTitle}</SuperTitle>\n          <Button\n            primary\n            onClick={() => this.handleFinish()}\n          >\n            {Config.text.startOverButton}\n          </Button>\n        </Podium>\n        <Confetti\n          width={window.innerWidth}\n          height={window.innerHeight}\n        />\n      </Fragment>\n    );\n  }\n}\n\nWinner.propTypes = {\n  previousView: PropTypes.string,\n  nextView: PropTypes.string,\n  selectedWinner: PropTypes.string.isRequired,\n};\n\nWinner.defaultProps = {\n  previousView: 'shuffle',\n  nextView: 'intro',\n};\n\nexport default Winner;\n","import Intro from './intro';\nimport SetParticipants from './set-participants';\nimport ConfirmParticipants from './confirm-participants';\nimport Shuffle from './shuffle';\nimport Winner from './winner';\n\nexport const VIEWS = {\n    intro: Intro,\n    setParticipants: SetParticipants,\n    confirmParticipants: ConfirmParticipants,\n    shuffle: Shuffle,\n    winner: Winner,\n};\n","import styled from 'styled-components';\nimport Config from 'config';\n\nconst AppWrapper = styled.div`\n  background-color: ${Config.theme.bgColor};\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: ${Config.theme.textColor};\n  text-align: center;\n`;\n\nexport default AppWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VIEWS } from 'views';\nimport AppWrapper from 'components/app-wrapper';\nimport { Main } from 'components/layout';\n\nconst App = props => {\n  const { activeView, ...rest } = props;\n  const ActiveContainer = VIEWS[activeView];\n  return (\n    <AppWrapper>\n      <Main>\n        <ActiveContainer\n          {...rest}\n        />\n      </Main>\n    </AppWrapper>\n  );\n};\n\nApp.propTypes = {\n  activeView: PropTypes.string,\n};\n\nApp.defaultProps = {\n  activeView: 'intro',\n};\n\nexport default App;\n","import _compact from 'lodash/compact';\nimport _trim from 'lodash/trim';\nimport _map from 'lodash/map';\n\nexport const parseTextAreaValue = (value) => value && _map(_compact(value.split('\\n')), _trim);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport _trim from 'lodash/trim';\nimport { setInStorage, getFromStorage } from 'utils/localstorage';\nimport Config from 'config';\nimport AppComponent from './app.js';\nimport { parseTextAreaValue } from './helpers';\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      activeView: 'intro',\n      participants: null,\n      selectedWinner: null,\n    };\n    this.state = {\n      activeView: getFromStorage('activeView') || this.initialState.activeView,\n      participants: parseTextAreaValue(getFromStorage('participants')) || this.initialState.participants,\n      selectedWinner: getFromStorage('selectedWinner') || this.initialState.selectedWinner,\n    };\n  }\n  changeActiveView = (viewName) => {\n    this.setState({\n      activeView: viewName,\n    });\n    setInStorage('activeView', viewName);\n  }\n  textareaChange = (value) => {\n    this.setState({\n      participants: parseTextAreaValue(value) || null,\n    });\n    setInStorage('participants', value || null);\n  }\n  selectedWinner = (value) => {\n    this.setState({\n      selectedWinner: value || null,\n    });\n    setInStorage('selectedWinner', value || null);\n  }\n  clearState = (callback) => {\n    this.setState(this.initialState, () => {\n      callback();\n    });\n  }\n  render() {\n    return(\n      <AppComponent\n      onChangeView={this.changeActiveView}\n      onTextareaChange={this.textareaChange}\n      onSelectedWinner={this.selectedWinner}\n      onClearState={this.clearState}\n      {...this.props}\n      {...this.state}\n      />\n    );\n  }\n}\n\nApp.propTypes = {\n  forcedWinner: PropTypes.string,\n};\n\nApp.defaultProps = {\n  forcedWinner: _trim(Config.forcedWinner) || null,\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/shuffle-spinner.9c057550.svg\";"],"sourceRoot":""}